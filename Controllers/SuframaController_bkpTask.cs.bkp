
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using System.Net.Mime;
using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.AspNetCore.Http;
using System.Collections.Generic;
using System.Linq;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;


namespace APICET_BKEND.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    //public class API_SuframaController : ControllerBase
    public class SuframaController : ControllerBase
    {


        /*[HttpGet]
        public IEnumerable<string> Get()
        {

            return new string[] { "Value 1", "Value 2", "Value 3" };

        }*/

        /*[HttpGet("{produtos}")]
        public string Get(string IE)
        {

            string jsonStr = ".....";
            return jsonStr;

        } */       


        /// <summary>
        /// Pega produtos suframa da Inscrição Estadual (IE)
        /// </summary>
        /// <param name="IE">Inscricao Estadual</param>
        /// <returns></returns>
        [HttpGet("produtos/{IE}")]
        [Produces(MediaTypeNames.Application.Json)]        
        [ProducesResponseType(StatusCodes.Status200OK)]
        [ProducesResponseType(StatusCodes.Status400BadRequest)]
        [ProducesResponseType(StatusCodes.Status404NotFound)]        
        public async Task<ProdutosIE> Get(string IE)
        {

            ProdutosIE prd = new ProdutosIE();;
            return prd;
            
            if(IE.Trim().Length != 9){ 
                //return BadRequest(); 
                //return BadRequest(); 
                
            }
            
            
            string jsonStr = "";
            
            APISUFRAMA suf = new APISUFRAMA();
            var resultado = await suf.procProdutos(IE); //200106023
            
            
            
            jsonStr = resultado.ToString();
            //return jsonStr;
            
            
            
            
            
            
           /* 
            testes
            
            string jsonStr = "Inscrição Estadual inválida";
            
            //if(IE == "12345"){
            //    jsonStr = "{ Produtos da IE 12345 }";
           //}
            APISUFRAMA suf = new APISUFRAMA();
            //suf.GetRequestTokenAsync("---");
            
            jsonStr = suf.RESULTAPI;
            //jsonStr = APISUFRAMA.ProcProdutos(IE);
            //APISUFRAMA.APISUFRAMA.            

            return jsonStr;
            */


        }

        


        
        
        
        
        [HttpGet("insumos/{IE}/{produto}")]
        public async Task<string> Get(string IE, string produto)
        {




            string jsonStr = "";
            
            APISUFRAMA suf = new APISUFRAMA();            
            var resultado = await suf.procInsumos(IE, produto); //"200106023", "0001"
            
            
            jsonStr = resultado.ToString();
            return jsonStr;


            /*testes
            string jsonStr = "Produto inválido";
            
            if (produto+tipo == "0001003") {
                jsonStr = "{ Insumos para produto 0001/003 }";
            }        

            return jsonStr;
            */




        }



        

        [HttpGet("lista_padrao/{IE}")]
        //public string Get(string IE)
        public async Task<string> Get(string IE, int tipo)
        {

            
            string jsonStr = "";
            
            APISUFRAMA suf = new APISUFRAMA();
            var resultado = await suf.procListaPadrao(IE);
                                                
            jsonStr = resultado.ToString();
            return jsonStr;
            
                    
        }



        [HttpPost("testepost")]
        [Consumes(MediaTypeNames.Application.Json)]
        [ProducesResponseType(StatusCodes.Status201Created)]
        [ProducesResponseType(StatusCodes.Status400BadRequest)]
        [Produces(MediaTypeNames.Application.Json)]
        public ActionResult<Produto> Post( 
            [FromBody] Produto produto
        )
        {



            //ProdutoID prd = new ProdutoID();
            //return prd;
            return Ok();

        }




    }
}
